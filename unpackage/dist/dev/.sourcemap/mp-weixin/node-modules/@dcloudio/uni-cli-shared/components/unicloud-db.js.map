{"version":3,"sources":["webpack:///./node_modules/@dcloudio/uni-cli-shared/components/unicloud-db.vue?a036","webpack:///./node_modules/@dcloudio/uni-cli-shared/components/unicloud-db.vue?8d26","webpack:///./node_modules/@dcloudio/uni-cli-shared/components/unicloud-db.vue?7825","webpack:///./node_modules/@dcloudio/uni-cli-shared/components/unicloud-db.vue?17d5","webpack:///node_modules/@dcloudio/uni-cli-shared/components/unicloud-db.vue?5078"],"names":["renderjs","component","options","__file","components","render","_vm","this","_h","$createElement","_self","_c","$scope","data","scopedSlotsCompiler","$setScopedSlotsParams","dataList","pagination","paginationInternal","loading","hasMore","error","errorMessage","recyclableRender","staticRenderFns","_withStripped","load","add","replace","auto","onready","manual","name","props","type","Object","Array","default","collection","String","action","field","orderby","where","pageData","pageCurrent","Number","pageSize","getcount","Boolean","getone","gettree","gettreepath","startwith","limitlevel","groupby","groupField","distinct","pageIndistinct","foreignKey","loadtime","undefined","created","_isEnded","current","size","count","$watch","al","attrs","forEach","push","newValue","i","oldValue","needReset","loadMode","loadData","methods","args1","clear","pageMode","reset","args2","callback","_execLoadData","loadMore","refresh","needLoading","uni","showLoading","title","loadingTitle","db","_getCollection","value","then","success","res","showToast","toastTitle","t","fail","err","needConfirm","showModal","content","message","showCancel","hideLoading","complete","remove","id","length","confirmTitle","confirmContent","confirm","_execRemove","update","doc","getTemp","keys","groupBy","orderBy","getOptions","getCount","limitLevel","startWith","getTree","treeOptions","getTreePath","skip","limit","isTemp","udb","get","setResult","result","code","_execLoadDataSuccess","_execLoadDataFail","Error","_getExec","data2","_dispatchEvent","events","$emit","console","ids","mask","exec","_id","dbCmd","in","removeData","index","dl","splice","il","_changeDataFunction"],"mappings":"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","file":"node-modules/@dcloudio/uni-cli-shared/components/unicloud-db.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./unicloud-db.vue?vue&type=template&id=6abf80b8&\"\nvar renderjs\nimport script from \"./unicloud-db.vue?vue&type=script&lang=js&\"\nexport * from \"./unicloud-db.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/uni-cli-shared/components/unicloud-db.vue\"\nexport default component.exports","export * from \"-!../../vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../webpack-uni-mp-loader/lib/template.js!../../vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../webpack-uni-mp-loader/lib/style.js!./unicloud-db.vue?vue&type=template&id=6abf80b8&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  if (_vm.$scope.data.scopedSlotsCompiler === \"augmented\") {\n    _vm.$setScopedSlotsParams(\"default\", {\n      options: _vm.options,\n      data: _vm.dataList,\n      pagination: _vm.paginationInternal,\n      loading: _vm.loading,\n      hasMore: _vm.hasMore,\n      error: _vm.errorMessage\n    })\n  }\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../babel-loader/lib/index.js!../../vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../webpack-uni-mp-loader/lib/script.js!../../vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../webpack-uni-mp-loader/lib/style.js!./unicloud-db.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../babel-loader/lib/index.js!../../vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../webpack-uni-mp-loader/lib/script.js!../../vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../webpack-uni-mp-loader/lib/style.js!./unicloud-db.vue?vue&type=script&lang=js&\"","<template>\n  <view>\n    <slot\n      :options=\"options\"\n      :data=\"dataList\"\n      :pagination=\"paginationInternal\"\n      :loading=\"loading\"\n      :hasMore=\"hasMore\"\n      :error=\"errorMessage\"\n    />\n  </view>\n</template>\n\n<script>\nimport { initVueI18n } from '@dcloudio/uni-i18n'\nimport messages from './i18n/index'\n\nconst { t } = initVueI18n(messages)\n\nconst events = {\n  load: 'load',\n  error: 'error'\n}\nconst pageMode = {\n  add: 'add',\n  replace: 'replace'\n}\nconst loadMode = {\n  auto: 'auto',\n  onready: 'onready',\n  manual: 'manual'\n}\n\nconst attrs = [\n  'pageCurrent',\n  'pageSize',\n  'collection',\n  'action',\n  'field',\n  'getcount',\n  'orderby',\n  'where',\n  'groupby',\n  'groupField',\n  'distinct'\n]\n\nexport default {\n  name: 'UniClouddb',\n  props: {\n    options: {\n      type: [Object, Array],\n      default () {\n        return {}\n      }\n    },\n    collection: {\n      type: String,\n      default: ''\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    field: {\n      type: String,\n      default: ''\n    },\n    orderby: {\n      type: String,\n      default: ''\n    },\n    where: {\n      type: [String, Object],\n      default: ''\n    },\n    pageData: {\n      type: String,\n      default: 'add'\n    },\n    pageCurrent: {\n      type: Number,\n      default: 1\n    },\n    pageSize: {\n      type: Number,\n      default: 20\n    },\n    getcount: {\n      type: [Boolean, String],\n      default: false\n    },\n    getone: {\n      type: [Boolean, String],\n      default: false\n    },\n    gettree: {\n      type: [Boolean, String, Object],\n      default: false\n    },\n    gettreepath: {\n      type: [Boolean, String],\n      default: false\n    },\n    startwith: {\n      type: String,\n      default: ''\n    },\n    limitlevel: {\n      type: Number,\n      default: 10\n    },\n    groupby: {\n      type: String,\n      default: ''\n    },\n    groupField: {\n      type: String,\n      default: ''\n    },\n    distinct: {\n      type: [Boolean, String],\n      default: false\n    },\n    pageIndistinct: {\n      type: [Boolean, String],\n      default: false\n    },\n    foreignKey: {\n      type: String,\n      default: ''\n    },\n    loadtime: {\n      type: String,\n      default: 'auto'\n    },\n    manual: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      loading: false,\n      hasMore: false,\n      dataList: this.getone ? undefined : [],\n      paginationInternal: {},\n      errorMessage: ''\n    }\n  },\n  created () {\n    this._isEnded = false\n    this.paginationInternal = {\n      current: this.pageCurrent,\n      size: this.pageSize,\n      count: 0\n    }\n\n    this.$watch(() => {\n      var al = []\n      attrs.forEach(key => {\n        al.push(this[key])\n      })\n      return al\n    }, (newValue, oldValue) => {\n      if (this.loadtime === loadMode.manual) {\n        return\n      }\n\n      this.paginationInternal.size = this.pageSize\n\n      let needReset = false\n      for (let i = 2; i < newValue.length; i++) {\n        if (newValue[i] !== oldValue[i]) {\n          needReset = true\n          break\n        }\n      }\n      if (needReset) {\n        this.clear()\n        this.reset()\n      }\n      if (newValue[0] !== oldValue[0]) {\n        this.paginationInternal.current = this.pageCurrent\n      }\n\n      this._execLoadData()\n    })\n\n    // #ifdef H5\n    if (process.env.NODE_ENV === 'development') {\n      this._debugDataList = []\n      if (!window.unidev) {\n        window.unidev = {\n          clientDB: {\n            data: []\n          }\n        }\n      }\n      window.unidev.clientDB.data.push(this._debugDataList)\n    }\n    // #endif\n\n    // #ifdef MP-TOUTIAO\n    let changeName\n    const events = this.$scope.dataset.eventOpts || []\n    for (var i = 0; i < events.length; i++) {\n      const event = events[i]\n      if (event[0].includes('^load')) {\n        changeName = event[1][0][0]\n      }\n    }\n    if (changeName) {\n      let parent = this.$parent\n      let maxDepth = 16\n      this._changeDataFunction = null\n      while (parent && maxDepth > 0) {\n        const fun = parent[changeName]\n        if (fun && typeof fun === 'function') {\n          this._changeDataFunction = fun\n          maxDepth = 0\n          break\n        }\n        parent = parent.$parent\n        maxDepth--\n      }\n    }\n    // #endif\n\n    if (!this.manual && this.loadtime === loadMode.auto) {\n      this.loadData()\n    }\n  },\n  // #ifdef H5\n  beforeDestroy () {\n    if (process.env.NODE_ENV === 'development' && window.unidev) {\n      var cd = this._debugDataList\n      var dl = window.unidev.clientDB.data\n      for (var i = dl.length - 1; i >= 0; i--) {\n        if (dl[i] === cd) {\n          dl.splice(i, 1)\n          break\n        }\n      }\n    }\n  },\n  // #endif\n  methods: {\n    loadData (args1, args2) {\n      let callback = null\n      let clear = false\n      if (typeof args1 === 'object') {\n        if (args1.clear) {\n          if (this.pageData === pageMode.replace) {\n            this.clear()\n          } else {\n            clear = args1.clear\n          }\n          this.reset()\n        }\n        if (args1.current !== undefined) {\n          this.paginationInternal.current = args1.current\n        }\n        if (typeof args2 === 'function') {\n          callback = args2\n        }\n      } else if (typeof args1 === 'function') {\n        callback = args1\n      }\n\n      this._execLoadData(callback, clear)\n    },\n    loadMore () {\n      if (this._isEnded || this.loading) {\n        return\n      }\n\n      if (this.pageData === pageMode.add) {\n        this.paginationInternal.current++\n      }\n\n      this._execLoadData()\n    },\n    refresh () {\n      this.clear()\n      this._execLoadData()\n    },\n    clear () {\n      this._isEnded = false\n      this.dataList = []\n    },\n    reset () {\n      this.paginationInternal.current = 1\n    },\n    add (value, {\n      action,\n      showToast = true,\n      toastTitle,\n      success,\n      fail,\n      complete,\n      needConfirm = true,\n      needLoading = true,\n      loadingTitle = ''\n    } = {}) {\n      if (needLoading) {\n        uni.showLoading({\n          title: loadingTitle\n        })\n      }\n      /* eslint-disable no-undef */\n      let db = uniCloud.database()\n      if (action) {\n        db = db.action(action)\n      }\n\n      db.collection(this._getCollection()).add(value).then((res) => {\n        success && success(res)\n        if (showToast) {\n          uni.showToast({\n            title: toastTitle || t('uniCloud.component.add.success')\n          })\n        }\n      }).catch((err) => {\n        fail && fail(err)\n        if (needConfirm) {\n          uni.showModal({\n            content: err.message,\n            showCancel: false\n          })\n        }\n      }).finally(() => {\n        if (needLoading) {\n          uni.hideLoading()\n        }\n        complete && complete()\n      })\n    },\n    remove (id, {\n      action,\n      success,\n      fail,\n      complete,\n      confirmTitle,\n      confirmContent,\n      needConfirm = true,\n      needLoading = true,\n      loadingTitle = ''\n    } = {}) {\n      if (!id || !id.length) {\n        return\n      }\n      if (!needConfirm) {\n        this._execRemove(id, action, success, fail, complete, needConfirm, needLoading, loadingTitle)\n        return\n      }\n      uni.showModal({\n        title: confirmTitle || t('uniCloud.component.remove.showModal.title'),\n        content: confirmContent || t('uniCloud.component.remove.showModal.content'),\n        showCancel: true,\n        success: (res) => {\n          if (!res.confirm) {\n            return\n          }\n          this._execRemove(id, action, success, fail, complete, needConfirm, needLoading, loadingTitle)\n        }\n      })\n    },\n    update (id, value, {\n      action,\n      showToast = true,\n      toastTitle,\n      success,\n      fail,\n      complete,\n      needConfirm = true,\n      needLoading = true,\n      loadingTitle = ''\n    } = {}) {\n      if (needLoading) {\n        uni.showLoading({\n          title: loadingTitle\n        })\n      }\n      /* eslint-disable no-undef */\n      let db = uniCloud.database()\n      if (action) {\n        db = db.action(action)\n      }\n\n      return db.collection(this._getCollection()).doc(id).update(value).then((res) => {\n        success && success(res)\n        if (showToast) {\n          uni.showToast({\n            title: toastTitle || t('uniCloud.component.update.success')\n          })\n        }\n      }).catch((err) => {\n        fail && fail(err)\n        if (needConfirm) {\n          uni.showModal({\n            content: err.message,\n            showCancel: false\n          })\n        }\n      }).finally(() => {\n        if (needLoading) {\n          uni.hideLoading()\n        }\n        complete && complete()\n      })\n    },\n    getTemp (isTemp = true) {\n      /* eslint-disable no-undef */\n      let db = uniCloud.database()\n\n      if (this.action) {\n        db = db.action(this.action)\n      }\n\n      db = db.collection(this.collection)\n\n      if (!(!this.where || !Object.keys(this.where).length)) {\n        db = db.where(this.where)\n      }\n      if (this.field) {\n        db = db.field(this.field)\n      }\n      if (this.foreignKey) {\n        db = db.foreignKey(this.foreignKey)\n      }\n      if (this.groupby) {\n        db = db.groupBy(this.groupby)\n      }\n      if (this.groupField) {\n        db = db.groupField(this.groupField)\n      }\n      if (this.distinct === true) {\n        db = db.distinct()\n      }\n      if (this.orderby) {\n        db = db.orderBy(this.orderby)\n      }\n\n      const {\n        current,\n        size\n      } = this.paginationInternal\n      const getOptions = {}\n      if (this.getcount) {\n        getOptions.getCount = this.getcount\n      }\n      const treeOptions = {\n        limitLevel: this.limitlevel,\n        startWith: this.startwith\n      }\n      if (this.gettree) {\n        getOptions.getTree = treeOptions\n      }\n      if (this.gettreepath) {\n        getOptions.getTreePath = treeOptions\n      }\n      db = db.skip(size * (current - 1)).limit(size)\n\n      if (isTemp) {\n        db = db.getTemp(getOptions)\n        db.udb = this\n      } else {\n        db = db.get(getOptions)\n      }\n\n      return db\n    },\n    setResult (result) {\n      if (result.code === 0) {\n        this._execLoadDataSuccess(result)\n      } else {\n        this._execLoadDataFail(new Error(result.message))\n      }\n    },\n    _execLoadData (callback, clear) {\n      if (this.loading) {\n        return\n      }\n      this.loading = true\n      this.errorMessage = ''\n\n      this._getExec().then((res) => {\n        this.loading = false\n        this._execLoadDataSuccess(res.result, callback, clear)\n\n        // #ifdef H5\n        if (process.env.NODE_ENV === 'development') {\n          this._debugDataList.length = 0\n          const formatData = JSON.parse(JSON.stringify(this.dataList))\n          if (Array.isArray(this.dataList)) {\n            this._debugDataList.push(...formatData)\n          } else {\n            this._debugDataList.push(formatData)\n          }\n        }\n        // #endif\n      }).catch((err) => {\n        this.loading = false\n        this._execLoadDataFail(err, callback)\n      })\n    },\n    _execLoadDataSuccess (result, callback, clear) {\n      const {\n        data,\n        count\n      } = result\n      this._isEnded = count !== undefined ? (this.paginationInternal.current * this.paginationInternal.size >= count) : (data.length < this.pageSize)\n      this.hasMore = !this._isEnded\n\n      const data2 = this.getone ? (data.length ? data[0] : undefined) : data\n\n      if (this.getcount) {\n        this.paginationInternal.count = count\n      }\n\n      callback && callback(data2, this._isEnded, this.paginationInternal)\n      this._dispatchEvent(events.load, data2)\n\n      if (this.getone || this.pageData === pageMode.replace) {\n        this.dataList = data2\n      } else {\n        if (clear) {\n          this.dataList = data2\n        } else {\n          this.dataList.push(...data2)\n        }\n      }\n    },\n    _execLoadDataFail (err, callback) {\n      this.errorMessage = err\n      callback && callback()\n      this.$emit(events.error, err)\n      if (process.env.NODE_ENV === 'development') {\n        console.error(err)\n      }\n    },\n    _getExec () {\n      return this.getTemp(false)\n    },\n    _execRemove (id, action, success, fail, complete, needConfirm, needLoading, loadingTitle) {\n      if (!this.collection || !id) {\n        return\n      }\n\n      const ids = Array.isArray(id) ? id : [id]\n      if (!ids.length) {\n        return\n      }\n\n      if (needLoading) {\n        uni.showLoading({\n          mask: true,\n          title: loadingTitle\n        })\n      }\n\n      /* eslint-disable no-undef */\n      const db = uniCloud.database()\n      const dbCmd = db.command\n\n      let exec = db\n      if (action) {\n        exec = exec.action(action)\n      }\n\n      exec.collection(this._getCollection()).where({\n        _id: dbCmd.in(ids)\n      }).remove().then((res) => {\n        success && success(res.result)\n        if (this.pageData === pageMode.replace) {\n          this.refresh()\n        } else {\n          this.removeData(ids)\n        }\n      }).catch((err) => {\n        fail && fail(err)\n        if (needConfirm) {\n          uni.showModal({\n            content: err.message,\n            showCancel: false\n          })\n        }\n      }).finally(() => {\n        if (needLoading) {\n          uni.hideLoading()\n        }\n        complete && complete()\n      })\n    },\n    _getCollection () {\n      const index = this.collection.indexOf(',')\n      const collection = index > 0 ? this.collection.substring(0, index) : this.collection\n      return collection\n    },\n    removeData (ids) {\n      const il = ids.slice(0)\n      const dl = this.dataList\n      for (let i = dl.length - 1; i >= 0; i--) {\n        const index = il.indexOf(dl[i]._id)\n        if (index >= 0) {\n          dl.splice(i, 1)\n          il.splice(index, 1)\n        }\n      }\n    },\n    _dispatchEvent (type, data) {\n      if (this._changeDataFunction) {\n        this._changeDataFunction(data, this._isEnded, this.paginationInternal)\n      } else {\n        this.$emit(type, data, this._isEnded, this.paginationInternal)\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":""}