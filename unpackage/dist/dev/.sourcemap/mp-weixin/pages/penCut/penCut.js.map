{"version":3,"sources":["uni-app:///main.js","webpack:///E:/Front-end/uni-app/challenge-cup/pages/penCut/penCut.vue?e0a0","webpack:///E:/Front-end/uni-app/challenge-cup/pages/penCut/penCut.vue?e025","webpack:///E:/Front-end/uni-app/challenge-cup/pages/penCut/penCut.vue?ff02","webpack:///E:/Front-end/uni-app/challenge-cup/pages/penCut/penCut.vue?8eab","uni-app:///pages/penCut/penCut.vue","webpack:///E:/Front-end/uni-app/challenge-cup/pages/penCut/penCut.vue?fc9a"],"names":["createPage","Page","renderjs","component","options","__file","components","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped"],"mappings":"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","file":"pages/penCut/penCut.js","sourcesContent":["import 'uni-pages';\nimport Vue from 'vue'\nimport Page from './pages/penCut/penCut.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./penCut.vue?vue&type=template&id=679525a6&\"\nvar renderjs\nimport script from \"./penCut.vue?vue&type=script&lang=js&\"\nexport * from \"./penCut.vue?vue&type=script&lang=js&\"\nimport style0 from \"./penCut.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/penCut/penCut.vue\"\nexport default component.exports","export * from \"-!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./penCut.vue?vue&type=template&id=679525a6&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./penCut.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./penCut.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"content\">\r\n\t\t<view class=\"tools\">\r\n\t\t\t<input type=\"button\" value=\"重做\" id=\"redo\" @tap='reDo()' />\r\n\t\t\t<input type=\"button\" value=\"裁剪\" id=\"btnCut\" @tap='cutImg()' />\r\n\t\t\t<input type=\"button\" value=\"下载\" id=\"btnDown\" @tap='downLoad()' />\r\n\t\t\t<img id=\"imgCut\" style=\"width: 100vw; height: 600rpx;\" :src='backgroundImageSrc' />\r\n\t\t\t<canvas id=\"canvas\" @touchstart='touchStartEvent($event)' @touchmove='touchMoveEvent($event)'\r\n\t\t\t\t@touchend='touchEndEvent($event)' style=\"width: 100vw; height: 600rpx;\" canvas-id=\"canvas\" />\r\n\r\n\t\t</view>\r\n\t\t<!-- \r\n\t\t<img id=\"imgCutShow\" :src=\"imgCutShowSrc\"> -->\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport Point from '../../static/js/Point.js'\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tbackgroundImageSrc: \"\",\r\n\t\t\t\tkeepBackground: true,\r\n\t\t\t\timgCutShowSrc: \"\",\r\n\t\t\t\timg: {\r\n\r\n\t\t\t\t\tid: \"imgCut\",\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t},\r\n\t\t\t\tcanvas: {\r\n\t\t\t\t\tid: \"canvas\",\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0,\r\n\t\t\t\t\t//坐标点集合\r\n\t\t\t\t\tpointList: [],\r\n\t\t\t\t\t//临时存储坐标点\r\n\t\t\t\t\ttempPointList: [],\r\n\t\t\t\t\t//圆点的触发半径：\r\n\t\t\t\t\troundR: 10,\r\n\t\t\t\t\t//圆点的显示半径：\r\n\t\t\t\t\troundRr: 1,\r\n\t\t\t\t\t//当前拖动点的索引值；\r\n\t\t\t\t\tcurPointIndex: 0,\r\n\t\t\t\t\t//判断是否点击拖动\r\n\t\t\t\t\tpaint: false,\r\n\t\t\t\t\t//判断是否点圆点拖动，并瞬间离开,是否拖动点；\r\n\t\t\t\t\tjuPull: false,\r\n\t\t\t\t\t//判断是否闭合\r\n\t\t\t\t\tisClose: false,\r\n\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\tonReady() {\r\n\r\n\r\n\t\t\tconst query = uni.createSelectorQuery().in(this);\r\n\t\t\tquery.select(`#${this.canvas.id}`).boundingClientRect(data => {\r\n\t\t\t\tthis.img.height = data.height;\r\n\t\t\t\tthis.img.width = data.width;\r\n\t\t\t\tthis.canvas.height = data.height;\r\n\t\t\t\tthis.canvas.width = data.width;\r\n\r\n\t\t\t}).exec();\r\n\t\t},\r\n\t\tonLoad(obj) {\r\n\t\t\tthis.backgroundImageSrc = obj.backgroundImageSrc;\r\n\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 画线\r\n\t\t\tdrawLine(context, startX, startY, endX, endY) {\r\n\t\t\t\tcontext.moveTo(startX, startY);\r\n\t\t\t\tcontext.lineTo(endX, endY);\r\n\t\t\t\tcontext.stroke();\r\n\r\n\t\t\t},\r\n\t\t\t// 画圆\r\n\t\t\tdrawArc(context, x, y) {\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.arc(x, y, this.canvas.roundRr, 360, Math.PI * 2, true);\r\n\t\t\t\tcontext.closePath();\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t},\r\n\r\n\t\t\t//更新画线\r\n\t\t\tdrawAllLine(context) {\r\n\t\t\t\t//画线\r\n\t\t\t\tlet pointList = this.canvas.pointList;\r\n\t\t\t\tif (pointList.length > 1) {\r\n\t\t\t\t\t// 画圈\r\n\t\t\t\t\tfor (let i = 0, len = pointList.length; i < len; i++) {\r\n\t\t\t\t\t\tthis.drawArc(context, pointList[i].pointx, pointList[i]\r\n\t\t\t\t\t\t\t.pointy);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 画线\r\n\t\t\t\t\tfor (let i = 0, len = pointList.length; i < len - 1; i++) {\r\n\t\t\t\t\t\tthis.drawLine(context, pointList[i].pointx, pointList[i]\r\n\t\t\t\t\t\t\t.pointy, pointList[i + 1].pointx, pointList[i + 1].pointy\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t//动态线针：(光标的x,y)\r\n\t\t\tdrawAllMove(context, x, y) {\r\n\t\t\t\tif (!this.canvas.isClose) {\r\n\t\t\t\t\tif (this.canvas.pointList.length >= 1) {\r\n\t\t\t\t\t\t//重画：\r\n\t\t\t\t\t\tthis.clearCanvas(context);\r\n\t\t\t\t\t\tlet pointList = this.canvas.pointList;\r\n\t\t\t\t\t\tfor (let i = 0; i < this.canvas.pointList.length - 1; i++) {\r\n\t\t\t\t\t\t\t//画线\r\n\t\t\t\t\t\t\tthis.drawLine(context, pointList[i].pointx, pointList[i].pointy, pointList[i + 1].pointx,\r\n\t\t\t\t\t\t\t\tpointList[i +\r\n\t\t\t\t\t\t\t\t\t1].pointy);\r\n\t\t\t\t\t\t\t////画圈\r\n\t\t\t\t\t\t\tthis.drawArc(context, pointList[i].pointx, pointList[i].pointy);\r\n\t\t\t\t\t\t\tif (i == this.canvas.pointList.length - 2) {\r\n\t\t\t\t\t\t\t\tthis.drawArc(context, pointList[i + 1].pointx, pointList[i + 1].pointy);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (pointList.length == 1) {\r\n\t\t\t\t\t\t\tthis.drawArc(context, pointList[0].pointx, pointList[0].pointy);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.drawArc(context, x, y);\r\n\t\t\t\t\t\tthis.drawLine(context, pointList[this.canvas.pointList.length - 1].pointx, pointList[this.canvas\r\n\t\t\t\t\t\t\t.pointList\r\n\t\t\t\t\t\t\t.length - 1].pointy, x, y);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t//清空画布\r\n\t\t\tclearCanvas(context) {\r\n\t\t\t\tcontext.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t\t},\r\n\r\n\t\t\t//填充背景色\r\n\t\t\tfillBackColor(context) {\r\n\r\n\r\n\r\n\t\t\t\tcontext.setFillStyle('white')\r\n\t\t\t\tcontext.fillRect(0, 0, this.canvas.width, this.canvas.height)\r\n\t\t\t\tcontext.globalCompositeOperation = 'destination-out';\r\n\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tfor (let i = 0; i < this.canvas.pointList.length; i++) {\r\n\t\t\t\t\tcontext.lineTo(this.canvas.pointList[i].pointx, this.canvas.pointList[i].pointy);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.closePath();\r\n\t\t\t\tcontext.fill();\r\n\t\t\t\tcontext.globalCompositeOperation = \"destination-over\";\r\n\r\n\t\t\t},\r\n\r\n\t\t\t//设置初始坐标点\r\n\t\t\tsetOriPoints(context, pointObj) {\r\n\t\t\t\tthis.clearCanvas(context);\r\n\t\t\t\tif (pointObj != null && pointObj.length > 0) {\r\n\t\t\t\t\tthis.canvas.pointList = pointObj.concat();\r\n\t\t\t\t\tif (pointObj.length > 1 && pointObj[pointObj.length - 1].pointx === pointObj[0].pointx) {\r\n\t\t\t\t\t\tthis.canvas.isClose = true;\r\n\t\t\t\t\t\tthis.fillBackColor(context);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.drawAllLine(context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\r\n\r\n\r\n\t\t\t//判断结束点是否与起始点重合；\r\n\t\t\tequalStartPoint(pointList, x, y) {\r\n\t\t\t\tif (pointList.length > 2 && Math.abs((x - pointList[0].pointx) * (x - pointList[0].pointx)) + Math.abs((y -\r\n\t\t\t\t\t\tpointList[0].pointy) * (y - pointList[0].pointy)) <= this.canvas.roundR * this.canvas.roundR) {\r\n\t\t\t\t\t//如果闭合\r\n\t\t\t\t\tthis.canvas.isClose = true;\r\n\t\t\t\t\tpointList[pointList.length - 1].pointx = pointList[0].pointx;\r\n\t\t\t\t\tpointList[pointList.length - 1].pointy = pointList[0].pointy;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.canvas.isClose = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t//判断鼠标点是不是在圆的内部：\r\n\t\t\troundIn(context, pointList, x, y) {\r\n\r\n\t\t\t\tif (!this.canvas.juPull) {\r\n\r\n\t\t\t\t\tfor (let i = 0; i < pointList.length; i++) {\r\n\r\n\t\t\t\t\t\tif (Math.abs((x - pointList[i].pointx) * (x - pointList[i].pointx)) + Math.abs((y - pointList[i]\r\n\t\t\t\t\t\t\t\t.pointy) * (y - pointList[i].pointy)) <= 2.5 * this.canvas.roundR * this.canvas.roundR) {\r\n\r\n\t\t\t\t\t\t\t//说明点击圆点拖动了；\r\n\r\n\t\t\t\t\t\t\tthis.canvas.juPull = true; //拖动\r\n\t\t\t\t\t\t\tthis.canvas.curPointIndex = i;\r\n\t\t\t\t\t\t\tpointList[i].pointx = x;\r\n\t\t\t\t\t\t\tpointList[i].pointy = y;\r\n\r\n\t\t\t\t\t\t\t//重画：\r\n\t\t\t\t\t\t\tthis.clearCanvas(context);\r\n\r\n\t\t\t\t\t\t\tif (this.canvas.isClose) {\r\n\t\t\t\t\t\t\t\tthis.fillBackColor(context);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.drawAllLine(context);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else { //拖动中\r\n\r\n\t\t\t\t\tpointList[this.canvas.curPointIndex].pointx = x;\r\n\t\t\t\t\tpointList[this.canvas.curPointIndex].pointy = y;\r\n\t\t\t\t\t//重画：\r\n\t\t\t\t\tthis.clearCanvas(context);\r\n\t\t\t\t\tif (this.canvas.isClose) {\r\n\t\t\t\t\t\tthis.fillBackColor(context);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.drawAllLine(context);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t//移动点坐标数组\r\n\t\t\tmovePointArray(pointArray) {\r\n\t\t\t\tlet smallX = pointArray[0].pointx;\r\n\t\t\t\tlet smallY = pointArray[0].pointy;\r\n\t\t\t\tlet bigX = smallX;\r\n\t\t\t\tlet bigY = smallY;\r\n\t\t\t\tlet tempArray = new Array();\r\n\t\t\t\tfor (let i = 1; i < pointArray.length; i++) {\r\n\t\t\t\t\tif (pointArray[i].pointx < smallX) {\r\n\t\t\t\t\t\tsmallX = pointArray[i].pointx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pointArray[i].pointx > bigX) {\r\n\t\t\t\t\t\tbigX = pointArray[i].pointx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pointArray[i].pointy < smallY) {\r\n\t\t\t\t\t\tsmallY = pointArray[i].pointy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pointArray[i].pointy > bigY) {\r\n\t\t\t\t\t\tbigY = pointArray[i].pointy;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < pointArray.length; i++) {\r\n\t\t\t\t\tpointArray[i].pointx -= smallX;\r\n\t\t\t\t\tpointArray[i].pointy -= smallY;\r\n\t\t\t\t}\r\n\t\t\t\ttempArray[0] = new Point(smallX, smallY);\r\n\t\t\t\ttempArray[1] = new Point(bigX, bigY);\r\n\t\t\t\treturn tempArray;\r\n\t\t\t},\r\n\t\t\t// 得到x，y坐标\r\n\t\t\tgetXAndY(event) {\r\n\t\t\t\tlet x = event.changedTouches[0].x;\r\n\t\t\t\tlet y = event.changedTouches[0].y\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\ttouchMoveEvent(event) {\r\n\r\n\t\t\t\tlet {\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty\r\n\t\t\t\t} = this.getXAndY(event)\r\n\r\n\t\t\t\tlet pointList = this.canvas.pointList\r\n\t\t\t\tlet context = uni.createCanvasContext('canvas')\r\n\t\t\t\t//是不是触屏了\r\n\t\t\t\tif (this.canvas.paint) {\r\n\r\n\t\t\t\t\t// console.log(x,y)\r\n\t\t\t\t\tif (pointList.length > 0) {\r\n\t\t\t\t\t\tthis.equalStartPoint(pointList, pointList[pointList.length - 1].pointx, pointList[pointList\r\n\t\t\t\t\t\t\t.length - 1].pointy);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.roundIn(context, pointList, x, y);\r\n\t\t\t\t}\r\n\t\t\t\t//判断是否在直线上\r\n\t\t\t\t//光标移动到线的附近如果是闭合的需要重新划线，并画上新添加的点\r\n\t\t\t\t// this.AddNewNode(x, y);\r\n\t\t\t\t//添加动态线：\r\n\t\t\t\tthis.drawAllMove(context, x, y);\r\n\t\t\t\tcontext.draw()\r\n\t\t\t},\r\n\t\t\ttouchStartEvent(event) {\r\n\t\t\t\tlet context = uni.createCanvasContext('canvas')\r\n\t\t\t\tthis.canvas.paint = true;\r\n\r\n\t\t\t\t//点击判断是否需要在线上插入新的节点：\r\n\t\t\t\tif (this.canvas.tempPointList.length > 0) {\r\n\r\n\t\t\t\t\tthis.canvas.pointList.splice(this.canvas.tempPointList[1].pointx, 0, new Point(this.canvas\r\n\t\t\t\t\t\t.tempPointList[0].pointx, this.canvas.tempPointList[0].pointy));\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//清空临时数组\r\n\t\t\t\t\tthis.canvas.tempPointList.length = 0;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t},\r\n\t\t\ttouchEndEvent(event) {\r\n\t\t\t\tlet {\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty\r\n\t\t\t\t} = this.getXAndY(event)\r\n\t\t\t\t// 画布\r\n\t\t\t\tlet context = uni.createCanvasContext('canvas')\r\n\t\t\t\tlet pointList = this.canvas.pointList\r\n\t\t\t\t//拖动结束\r\n\t\t\t\tthis.canvas.paint = false;\r\n\r\n\t\t\t\t//拖动结束；\r\n\t\t\t\tif (this.canvas.juPull) {\r\n\r\n\t\t\t\t\tthis.canvas.juPull = false;\r\n\t\t\t\t\tthis.canvas.curPointIndex = 0;\r\n\t\t\t\t\t//验证抠图是否闭合：闭合，让结束点=开始点；添加标记\r\n\t\t\t\t\tthis.equalStartPoint(pointList, pointList[pointList.length - 1].pointx, pointList[pointList.length - 1]\r\n\t\t\t\t\t\t.pointy);\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//如果闭合：禁止添加新的点；\r\n\t\t\t\t\tif (!this.canvas.isClose) { //没有闭合\r\n\t\t\t\t\t\tpointList.push(new Point(x, y));\r\n\r\n\t\t\t\t\t\t//验证抠图是否闭合：闭合，让结束点=开始点；添加标记\r\n\t\t\t\t\t\tthis.equalStartPoint(pointList, pointList[pointList.length - 1].pointx, pointList[pointList\r\n\t\t\t\t\t\t\t.length - 1].pointy);\r\n\t\t\t\t\t\t//判断是否闭合：\r\n\t\t\t\t\t\t//重新画；\r\n\t\t\t\t\t\tif (pointList.length > 1) {\r\n\t\t\t\t\t\t\t// 画圈\r\n\t\t\t\t\t\t\tfor (let i = 0, len = pointList.length; i < len; i++) {\r\n\t\t\t\t\t\t\t\tthis.drawArc(context, pointList[i].pointx, pointList[i]\r\n\t\t\t\t\t\t\t\t\t.pointy);\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 画线\r\n\t\t\t\t\t\t\tfor (let i = 0, len = pointList.length; i < len - 1; i++) {\r\n\t\t\t\t\t\t\t\tthis.drawLine(context, pointList[i].pointx, pointList[i]\r\n\t\t\t\t\t\t\t\t\t.pointy, pointList[i + 1].pointx, pointList[i + 1].pointy\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tthis.drawArc(context, pointList[pointList.length - 1].pointx, pointList[pointList.length - 1]\r\n\t\t\t\t\t\t\t\t.pointy);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//闭合\r\n\t\t\t\t\t\tthis.fillBackColor(context)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//验证是否填充背景：\r\n\t\t\t\tif (this.canvas.isClose) {\r\n\t\t\t\t\tthis.fillBackColor(context);\r\n\t\t\t\t\tthis.drawAllLine(context);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.draw()\r\n\r\n\t\t\t},\r\n\t\t\t//判断是否为空\r\n\t\t\tnotEmptyObj(obj) {\r\n\t\t\t\tif (obj !== null && obj !== undefined && obj !== \"\") {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\r\n\t\t\tsaveImageToPhotosAlbum(filePath) {\r\n\t\t\t\tuni.saveImageToPhotosAlbum({\r\n\t\t\t\t\tfilePath: filePath,\r\n\t\t\t\t\tsuccess: () => {\r\n\t\t\t\t\t\tconsole.log('保存成功')\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: (res) => {\r\n\t\t\t\t\t\tconsole.log('保存失败')\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t},\r\n\t\t\t//函数：重做，清空\r\n\t\t\treDo() {\r\n\t\t\t\tlet context = uni.createCanvasContext('canvas')\r\n\t\t\t\tthis.clearCanvas(context);\r\n\t\t\t\tcontext.draw()\r\n\t\t\t\t//清空listPoint();\r\n\t\t\t\tthis.canvas.pointList.length = 0;\r\n\t\t\t\t//isClose闭合重新设为false;\r\n\t\t\t\tthis.canvas.isClose = false;\r\n\t\t\t},\r\n\t\t\tcutImg() {\r\n\t\t\t\tlet context = uni.createCanvasContext('canvas')\r\n\t\t\t\tthis.clearCanvas(context);\r\n\t\t\t\tcontext.draw()\r\n\t\t\t\tcontext.setStrokeStyle(\"#ffffff\")\r\n\t\t\t\tthis.fillBackColor(context)\r\n\t\t\t\tthis.drawAllLine(context);\r\n\t\t\t\tcontext.draw()\r\n\t\t\t},\r\n\t\t\tasync downLoad() {\r\n\t\t\t\tlet tempPointArray = [];\r\n\t\t\t\tlet tempPointList = [];\r\n\t\t\t\tlet context = uni.createCanvasContext('canvas')\r\n\t\t\t\tif (this.notEmptyObj(this.canvas.pointList) && this.canvas.pointList.length > 1) {\r\n\t\t\t\t\ttempPointList = JSON.parse(JSON.stringify(this.canvas.pointList));\r\n\t\t\t\t\ttempPointArray = this.movePointArray(tempPointList);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '请先进行抠图操作'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tcontext.beginPath();\r\n\r\n\t\t\t\tfor (let i = 0; i < tempPointList.length; i++) {\r\n\t\t\t\t\tcontext.lineTo(tempPointList[i].pointx, tempPointList[i].pointy);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.lineTo(tempPointList[0].pointx, tempPointList[0].pointy);\r\n\t\t\t\tcontext.clip();\r\n\t\t\t\t// 保留背景色\r\n\t\t\t\tif (this.keepBackground) {\r\n\r\n\t\t\t\t\tuni.getImageInfo({\r\n\t\t\t\t\t\tsrc: this.backgroundImageSrc,\r\n\t\t\t\t\t\tsuccess: (res) => {\r\n\r\n\t\t\t\t\t\t\tcontext.drawImage(res.path, tempPointArray[0].pointx * -1, tempPointArray[0]\r\n\t\t\t\t\t\t\t\t.pointy * -1,\r\n\t\t\t\t\t\t\t\tthis.img.width, this.img.height);\r\n\r\n\t\t\t\t\t\t\tcontext.draw(false, () => {\r\n\r\n\t\t\t\t\t\t\t\tuni.canvasToTempFilePath({\r\n\t\t\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t\t\t\twidth: this.canvas.width,\r\n\t\t\t\t\t\t\t\t\theight: this.canvas.height,\r\n\t\t\t\t\t\t\t\t\tdestWidth: this.canvas.width,\r\n\t\t\t\t\t\t\t\t\tdestHeight: this.canvas.width,\r\n\t\t\t\t\t\t\t\t\tcanvasId: 'canvas',\r\n\t\t\t\t\t\t\t\t\tsuccess: (res) => {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// 在H5平台下，tempFilePath 为 base64\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(res.tempFilePath)\r\n\t\t\t\t\t\t\t\t\t\tthis.imgCutShowSrc = res.tempFilePath\r\n\t\t\t\t\t\t\t\t\t\tthis.saveImageToPhotosAlbum(this.imgCutShowSrc)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 不保留背景色\r\n\t\t\t\t\tuni.canvasToTempFilePath({\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\twidth: this.canvas.width,\r\n\t\t\t\t\t\theight: this.canvas.height,\r\n\t\t\t\t\t\tdestWidth: this.canvas.width,\r\n\t\t\t\t\t\tdestHeight: this.canvas.width,\r\n\t\t\t\t\t\tcanvasId: 'canvas',\r\n\t\t\t\t\t\tsuccess: (res) => {\r\n\r\n\r\n\t\t\t\t\t\t\tthis.imgCutShowSrc = res.tempFilePath\r\n\t\t\t\t\t\t\tthis.saveImageToPhotosAlbum(this.imgCutShowSrc)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.canvasDiv {\r\n\t\tborder: 1px dashed #c89191;\r\n\t}\r\n\r\n\t#imgCutShow {\r\n\t\tposition: absolute;\r\n\t\tdisplay: none;\r\n\t\tborder: 1px dashed #c89191;\r\n\t\tmargin: 0px 410px;\r\n\t}\r\n\r\n\t.tools {\r\n\t\tposition: absolute;\r\n\t\tclear: both;\r\n\r\n\t}\r\n\r\n\t#drawPanel,\r\n\t#canvas,\r\n\t#imgCut {\r\n\r\n\t\tposition: absolute;\r\n\r\n\t}\r\n\r\n\t#canvas {\r\n\t\tz-index: 2;\r\n\r\n\t}\r\n\r\n\t#imgCut {\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t#imgCutShow {\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t}\r\n</style>\n","import mod from \"-!../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./penCut.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./penCut.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}